image: golang:latest

# - 

variables:
  IMAGE_NAME: maiyzaza/demo-app
  IMAGE_TAG: go-back-end

stages:
  - database
  - build
  - deploy

database:
  stage: database
  script:
    -  |
        cat << EOF > .env
              REMOTE_DB_URL="$DB_CONNECTION"
        EOF
        ls -la
        cat .env

build_image:
  stage: build
  image: docker:24.0.4-cli
  services:
    - docker:24.0.4-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - chmod 400 $SSH_KEY
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY root@146.190.98.250 "
      docker login -u $REGISTRY_USER -p $REGISTRY_PASS &&
      docker image ls || echo 'No Docker images found.' &&
      docker ps -aq | xargs docker stop || echo 'No running containers found.' &&
      docker ps -aq | xargs docker rm || echo 'No containers to remove.' &&
      docker images -aq | xargs docker rmi || echo 'No images to delete.' &&
      docker build -t $IMAGE_NAME:$IMAGE_TAG . &&
      docker push $IMAGE_NAME:$IMAGE_TAG"

deploy:
  stage: deploy
  before_script:
    - chmod 400 $SSH_KEY
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY root@146.190.98.250 "
      docker login -u $REGISTRY_USER -p $REGISTRY_PASS &&
      docker ps -aq | xargs docker stop | xargs docker rm &&
      docker run -d -p 5000:5000 $IMAGE_NAME:$IMAGE_TAG"

